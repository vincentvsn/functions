/** @hidden */
export declare class Utils {
    static processInput<T>(input: string | T): string | T;
    static getInstancesOf<T>(collection: {
        [index: string]: unknown;
    }, abstractClass: T): T[];
    static getHrMilliseconds(times: number[]): number;
    static hasStringProperty<X extends {}, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, string>;
    static hasOwnProperty<X extends {}, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown>;
    static parseTimestampsAsDates(obj: unknown): void;
    static hasAllPropertiesOf<T>(obj: unknown, refInstance: T): boolean;
    static ensureNonNull<T>(argument: T | undefined, message: string): T;
    static sleep(delayInMilliseconds: number): Promise<void>;
    static throwIfNotInstanceOf<T>(value: unknown, name: string, refInstance: T, type: string): void;
    static throwIfEmpty(value: unknown, name: string): void;
    static throwIfNotNumber(value: unknown, name: string): void;
}
