"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrchestratorState = void 0;
const whenallaction_1 = require("./actions/whenallaction");
const whenanyaction_1 = require("./actions/whenanyaction");
const replaySchema_1 = require("./replaySchema");
class OrchestratorState {
    constructor(options, _literalActions = false) {
        this.isDone = options.isDone;
        this.actions = options.actions;
        this.output = options.output;
        this.schemaVersion = options.schemaVersion;
        if (options.error != null) {
            this.error = options.error;
        }
        if (options.customStatus != null) {
            this.customStatus = options.customStatus;
        }
        if (options.schemaVersion === replaySchema_1.ReplaySchema.V1 && !_literalActions) {
            const actions = this.actions[0];
            const newActions = [];
            if (actions !== undefined) {
                for (const action of actions) {
                    const newEntry = [];
                    if (action instanceof whenallaction_1.WhenAllAction || action instanceof whenanyaction_1.WhenAnyAction) {
                        const innerActionArr = this.flattenCompoundActions(action.compoundActions);
                        newEntry.push(...innerActionArr);
                    }
                    else {
                        newEntry.push(action);
                    }
                    newActions.push(newEntry);
                }
                this.actions = newActions;
            }
        }
    }
    flattenCompoundActions(actions) {
        const flatActions = [];
        for (const action of actions) {
            if (action instanceof whenallaction_1.WhenAllAction || action instanceof whenanyaction_1.WhenAnyAction) {
                const innerActionArr = this.flattenCompoundActions(action.compoundActions);
                flatActions.push(...innerActionArr);
            }
            else {
                flatActions.push(action);
            }
        }
        return flatActions;
    }
}
exports.OrchestratorState = OrchestratorState;
//# sourceMappingURL=orchestratorstate.js.map