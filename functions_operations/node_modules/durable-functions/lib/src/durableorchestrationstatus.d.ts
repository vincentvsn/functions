import { OrchestrationRuntimeStatus } from "./classes";
/**
 * Represents the status of a durable orchestration instance.
 *
 * Can be fetched using [[DurableOrchestrationClient]].[[getStatus]].
 */
export declare class DurableOrchestrationStatus {
    /** The orchestrator function name. */
    readonly name: string;
    /**
     * The unique ID of the instance.
     *
     * The instance ID is generated and fixed when the orchestrator
     * function is scheduled. It can either auto-generated, in which case
     * it is formatted as a GUID, or it can be user-specified with any
     * format.
     */
    readonly instanceId: string;
    /**
     * The time at which the orchestration instance was created.
     *
     * If the orchestration instance is in the [[Pending]] status, this
     * time represents the time at which the orchestration instance was
     * scheduled.
     */
    readonly createdTime: Date;
    /**
     * The time at which the orchestration instance last updated its
     * execution history.
     */
    readonly lastUpdatedTime: Date;
    /**
     * The input of the orchestration instance.
     */
    readonly input: unknown;
    /**
     * The output of the orchestration instance.
     */
    readonly output: unknown;
    /**
     * The runtime status of the orchestration instance.
     */
    readonly runtimeStatus: OrchestrationRuntimeStatus;
    /**
     * The custom status payload (if any) that was set by
     * [[DurableOrchestrationClient]].[[setCustomStatus]].
     */
    readonly customStatus?: unknown;
    /**
     * The execution history of the orchestration instance.
     *
     * The history log can be large and is therefore `undefined` by
     * default. It is populated only when explicitly requested in the call
     * to [[DurableOrchestrationClient]].[[getStatus]].
     */
    readonly history?: unknown[] | undefined;
    /** @hidden */
    constructor(
    /** The orchestrator function name. */
    name: string, 
    /**
     * The unique ID of the instance.
     *
     * The instance ID is generated and fixed when the orchestrator
     * function is scheduled. It can either auto-generated, in which case
     * it is formatted as a GUID, or it can be user-specified with any
     * format.
     */
    instanceId: string, 
    /**
     * The time at which the orchestration instance was created.
     *
     * If the orchestration instance is in the [[Pending]] status, this
     * time represents the time at which the orchestration instance was
     * scheduled.
     */
    createdTime: Date, 
    /**
     * The time at which the orchestration instance last updated its
     * execution history.
     */
    lastUpdatedTime: Date, 
    /**
     * The input of the orchestration instance.
     */
    input: unknown, 
    /**
     * The output of the orchestration instance.
     */
    output: unknown, 
    /**
     * The runtime status of the orchestration instance.
     */
    runtimeStatus: OrchestrationRuntimeStatus, 
    /**
     * The custom status payload (if any) that was set by
     * [[DurableOrchestrationClient]].[[setCustomStatus]].
     */
    customStatus?: unknown, 
    /**
     * The execution history of the orchestration instance.
     *
     * The history log can be large and is therefore `undefined` by
     * default. It is populated only when explicitly requested in the call
     * to [[DurableOrchestrationClient]].[[getStatus]].
     */
    history?: unknown[] | undefined);
}
