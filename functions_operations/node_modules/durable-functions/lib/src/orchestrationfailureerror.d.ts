import { OrchestratorState } from "./classes";
/**
 * @hidden
 * A wrapper for all errors thrown within an orchestrator function. This exception will embed
 * the orchestrator state in a way that the C# extension knows how to read so that it can replay the
 * actions scheduled before throwing an exception. This prevents non-determinism errors in Durable Task.
 *
 * Note that making any changes to the following schema to OrchestrationFailureError.message could be considered a breaking change:
 *
 * "<error message as a string>\n\n$OutOfProcData$<json representation of state>"
 */
export declare class OrchestrationFailureError extends Error {
    constructor(error: any, state: OrchestratorState);
}
